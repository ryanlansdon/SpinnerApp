{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/models/question-response.ts","./src/app/search-item/search-item.component.html","./src/app/search-item/search-item.component.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/environments/environment.ts","./src/app/join-band/join-band.component.html","./src/app/join-band/join-band.component.ts","./src/app/services/post.service.ts","./src/app/models/post.ts","./src/app/edit-user/edit-user.component.ts","./src/app/edit-user/edit-user.component.html","./src/app/post-item/post-item.component.html","./src/app/post-item/post-item.component.ts","./src/app/services/comment-service.service.ts","./src/app/band-view/band-view.component.ts","./src/app/band-view/band-view.component.html","./src/app/services/get-bands.service.ts","./src/app/models/post-comment.ts","./src/app/services/daily-question.service.ts","./src/app/services/likes.service.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/models/user.model.ts","./src/app/comment-box/comment-box.component.ts","./src/app/comment-box/comment-box.component.html","./src/app/app.module.ts","./src/app/services/edit-user.service.ts","./src/app/likedposts/likedposts.component.html","./src/app/likedposts/likedposts.component.ts","./src/app/band/band.component.ts","./src/app/band/band.component.html","./src/app/services/url.service.ts","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/services/search.service.ts","./src/app/models/song.ts","./src/app/services/spotify.service.ts","./src/app/services/user.service.ts","./src/app/services/get-track.service.ts","./src/app/band-post/band-post.component.ts","./src/app/band-post/band-post.component.html","./src/app/band-snapshot/band-snapshot.component.html","./src/app/band-snapshot/band-snapshot.component.ts","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/app-routing.module.ts","./src/app/post-song/post-song.component.html","./src/app/post-song/post-song.component.ts","./src/app/response-item/response-item.component.html","./src/app/response-item/response-item.component.ts","./src/app/daily-question/daily-question.component.html","./src/app/daily-question/daily-question.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../models/user.model';\r\nimport {UserService} from '../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  \r\n  constructor(private userServ: UserService) { \r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  doClick(): void {\r\n  \r\n  }\r\n\r\n  login(): void {\r\n    this.userServ.login().subscribe(response => {this.userServ.loggedInUser = response});\r\n  }\r\n\r\n  register(): void {\r\n    this.userServ.register().subscribe(response => {this.userServ.loggedInUser = response});\r\n  }\r\n\r\n  toggle(): void {\r\n    document.getElementById('loginForm').toggleAttribute('hidden');\r\n    document.getElementById('to-login').toggleAttribute('disabled');\r\n    document.getElementById('registerForm').toggleAttribute('hidden');\r\n    document.getElementById('to-register').toggleAttribute('disabled');\r\n  }\r\n\r\n}\r\n","<link href=\"register.component.css\" rel=\"stylesheet\" />\r\n\r\n<body class=\"v8\">\r\n    <div id=\"main-div\" class=\"row\">\r\n        <div class=\"col-7\">\r\n\r\n            <h3 style=\"color:#4a148c;\"><img src=\"assets/spinner_logo.png\" height=180 class=\"align-center\">Spinner</h3>\r\n            <ul>\r\n                <li>Discover new music</li>\r\n                <li>Show off your favorite songs</li>\r\n                <li>Join communities of like-minded listeners</li>\r\n            </ul>\r\n\r\n        </div>\r\n        <div id=\"login-div\" class=\"col-4\">\r\n            <div class=\"toggleBox\">\r\n                <button type=\"button\" id=\"to-login\" class=\"toggle-btn\" (click)=\"toggle()\" disabled>Login</button>\r\n                <button type=\"button\" id=\"to-register\" class=\"toggle-btn\" (click)=\"toggle()\">Register</button>\r\n            </div>\r\n            <form name=\"loginForm\" id=\"loginForm\">\r\n                <div>\r\n                    <label for=\"username\">Username: </label>\r\n                    <input id=\"username-login\" type=\"text\" name=\"username\" placeholder=\"Username\"\r\n                        required=\"required\" /><br>\r\n                </div>\r\n                <div>\r\n                    <label for=\"passwd\">Password: </label>\r\n                    <input id=\"password-login\" type=\"password\" name=\"password\" placeholder=\"Password\"\r\n                        required=\"required\" /><br>\r\n                </div>\r\n                <button id=\"loginbtn\" type=\"button\" class=\"btn btn-primary btn-block btn-large\"\r\n                    (click)=\"login()\">Login</button>\r\n            </form>\r\n            <form name=\"registerForm\" id=\"registerForm\" hidden>\r\n                <div>\r\n                    <label for=\"firstName\">First Name: </label>\r\n                    <input id=\"firstName\" type=\"text\" name=\"firstName\" placeholder=\"First Name\"\r\n                        required=\"required\" /><br>\r\n                </div>\r\n                <div>\r\n                    <label for=\"lastName\">Last Name: </label>\r\n                    <input id=\"lastName\" type=\"text\" name=\"lastName\" placeholder=\"Last Name\" required=\"required\" /><br>\r\n                </div>\r\n                <div>\r\n                    <label for=\"username\">Username: </label>\r\n                    <input id=\"username-reg\" type=\"text\" name=\"username\" placeholder=\"Username\"\r\n                        required=\"required\" /><br>\r\n                </div>\r\n                <div>\r\n                    <label for=\"passwd\">Password: </label>\r\n                    <input id=\"password-reg\" type=\"password\" name=\"password\" placeholder=\"Password\"\r\n                        required=\"required\" /><br>\r\n                </div>\r\n                <button id=\"registerBtn\" type=\"button\" class=\"btn btn-primary btn-block btn-large\"\r\n                    (click)=\"register()\">Submit</button>\r\n            </form>\r\n        </div>\r\n        <div class=\"col-1\"></div>\r\n    </div>\r\n</body>","import { Song } from \"./song\";\r\n\r\nexport class QuestionResponse {\r\n    id: number;\r\n    song: Song;\r\n    likes: number;\r\n    questionDate: Date;\r\n}\r\n","<mdb-card *ngIf=\"track\" class=\"mb-2 p-0\" style=\"width:350px; height:150px\">\r\n    <mdb-card-body>\r\n        <div class=\"row\" style=\"background-color:rgba(25,20,20,1);\">\r\n            <div class=\"col-5\">\r\n                <br><img class=\"searchResultImg\" [src]=\"track.album.images[0].url\" [alt]=\"track.name\"><br><br>\r\n            </div>\r\n            <div class=\"col-7\">\r\n                <br><p class=\"font-weight-bold\" style=\"color:white;\">{{ track.name }}</p>\r\n                <p style=\"color:#DCDCDC;\">{{ track.artists[0].name }}</p>\r\n            </div>\r\n        </div>\r\n    </mdb-card-body>\r\n</mdb-card>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search-item',\r\n  templateUrl: './search-item.component.html',\r\n  styleUrls: ['./search-item.component.css']\r\n})\r\nexport class SearchItemComponent implements OnInit {\r\n  @Input() track: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n}\r\n","<section *ngIf=\"!this.userServ.loggedInUser\">\r\n    <div>\r\n        <app-register></app-register>\r\n    </div>\r\n</section>\r\n<section *ngIf=\"this.userServ.loggedInUser\">\r\n    <app-navbar></app-navbar>\r\n    <router-outlet></router-outlet>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../services/user.service';\r\nimport { SpotifyService } from '../services/spotify.service';\r\nimport { User } from '../models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  constructor(public userServ: UserService, public spotifyServ: SpotifyService) { \r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.spotifyServ.getKey().subscribe(\r\n      resp => {\r\n        this.spotifyServ.token = resp;\r\n      }\r\n    );\r\n\r\n    this.userServ.getLoggedInUser();\r\n  }\r\n\r\n  \r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<mdb-card class=\"mb-4\" style=\"width:80%; margin:0 auto; background-color:#4a148c;\" *ngFor=\"let d of data\">\r\n    <mdb-card-body>\r\n        <mdb-card-title>\r\n            <h4 style=\"color:white;\">{{d.name}}</h4>\r\n        </mdb-card-title>\r\n\r\n        <button type=\"button\" class=\"btn btn-dark\" (click)=\"joinBand(d)\" mdbBtn color=\"default\" rounded=\"true\" data-toggle=\"modal\" data-target=\"#basicExample\" (click)=\"frame.show()\"\r\n         mdbWavesEffect>Join the Band</button>\r\n\r\n     <div mdbModal #frame=\"mdbModal\" class=\"modal fade top\" id=\"frameModalTop\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\r\n      aria-hidden=\"true\">\r\n     <div class=\"modal-dialog modal-notify modal-success purple darken-4\" role=\"document\">\r\n    <!--Content-->\r\n    <div class=\"modal-content\">\r\n      <!--Header-->\r\n      <div class=\"modal-header\">\r\n        <p class=\"heading lead\"> Success</p>\r\n\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"frame.hide()\">\r\n          <span aria-hidden=\"true\" class=\"white-text\">&times;</span>\r\n        </button>\r\n      </div>\r\n\r\n      <!--Body-->\r\n      <div class=\"modal-body\">\r\n        <div class=\"text-center\">\r\n          <mdb-icon fas icon=\"check\" size=\"4x\" class=\"mb-3 animated rotateIn\"></mdb-icon>\r\n          <p>You have successfully joined {{d.name}} </p>\r\n        </div>\r\n      </div>\r\n\r\n      <!--Footer-->\r\n      <div class=\"modal-footer justify-content-center\">\r\n        <a type=\"button\" mdbBtn color=\"success\" outline=\"true\" class=\"waves-effect\" mdbWavesEffect (click)=\"frame.hide()\">ok</a>\r\n      </div>\r\n    </div>\r\n    <!--/.Content-->\r\n  </div>\r\n</div>\r\n    </mdb-card-body>\r\n</mdb-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {GetBandsService} from '../services/get-bands.service';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { UrlService } from '../services/url.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-join-band',\r\n  templateUrl: './join-band.component.html',\r\n  styleUrls: ['./join-band.component.css']\r\n})\r\nexport class JoinBandComponent implements OnInit {\r\n  baseUrl: string = this.urlServ.baseUrl;\r\n  name:String\r\n  data:any;\r\n  constructor(private bandData: GetBandsService, private http: HttpClient, private urlServ: UrlService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.bandData.getBands().subscribe((result)=>{\r\n      console.log(result);\r\n      this.data=result;\r\n    })\r\n  }\r\n\r\n  joinBand(b:any){\r\n    let url= this.baseUrl+\"/bands/join/\"+b.id;\r\n    this.http.put(url,{},{withCredentials: true}).subscribe((result)=>{\r\n      console.log(result);\r\n    })\r\n  \r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Track } from '../models/result-model';\r\nimport { Post } from '../models/post';\r\nimport { Song } from '../models/song';\r\nimport { Band } from '../models/band';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UrlService } from '../services/url.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PostService {\r\n  baseUrl: string;\r\n\r\n  constructor(private http: HttpClient, private urlServ: UrlService) { \r\n    this.baseUrl = this.urlServ.baseUrl + '/posts';\r\n  }\r\n\r\n  public createPost(tracks: Track[], title: string, band: Band) {\r\n    let post: Post = new Post;\r\n    post.id = 0;\r\n    post.likes = 0;\r\n    post.title = title;\r\n    let postSongs: Song[] = new Array();\r\n    tracks.forEach(function (track) {\r\n      let song: Song = new Song;\r\n      song.id = 0;\r\n      song.songKey = track.id;\r\n      postSongs.push(song);\r\n    });\r\n    post.songs = postSongs;\r\n    post.band = band;\r\n    post.postTime = new Date();\r\n    this.http.post(this.baseUrl, post, {withCredentials: true}).subscribe();\r\n  }\r\n\r\n  public getBandPosts(bandId: number) {\r\n    let url = this.baseUrl + '/band/' + bandId;\r\n\r\n    return this.http.get(url, {withCredentials: true}).pipe(\r\n      map(resp => resp as Post[])\r\n    );\r\n  }\r\n\r\n  public getPostsBySong(track: Track) {\r\n    let url = this.baseUrl + '/song/' + track.id;\r\n\r\n    return this.http.get(url, {withCredentials: true}).pipe(\r\n      map(resp => resp as Post[])\r\n    );\r\n  }\r\n}\r\n","import { PostComment } from '../models/post-comment';\r\nimport { Song } from '../models/song';\r\nimport { Band } from '../models/band';\r\n\r\nexport class Post {\r\n    id: number;\r\n    title: string;\r\n    postTime: Date;\r\n    songs: Song[];\r\n    comments: PostComment[];\r\n    likes: number;\r\n    band: Band;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {UserService} from \"../services/user.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {User} from \"../models/user.model\";\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {first} from \"rxjs/operators\";\r\nimport { EditUserService } from '../services/edit-user.service'\r\n\r\n@Component({\r\n  selector: 'app-edit-user',\r\n  templateUrl: './edit-user.component.html',\r\n  styleUrls: ['./edit-user.component.css']\r\n})\r\nexport class EditUserComponent implements OnInit {\r\n\r\n  user: User;\r\n  editForm: FormGroup;\r\n  imageLink: string = \"\";\r\n  loading: boolean = false;\r\n  file: File = null;\r\n  constructor(private editUserService: EditUserService,private formBuilder: FormBuilder,private router: Router, private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    let userId = localStorage.getItem(\"editUserId\");\r\n    if(!userId) {\r\n      alert(\"Invalid action.\")\r\n      this.router.navigate(['list-user']);\r\n      return;\r\n    }\r\n    this.editForm = this.formBuilder.group({\r\n      id: [],\r\n      username: ['', Validators.required],\r\n      passwd: ['', Validators.required],\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required]\r\n    });\r\n    this.userService.getUserById(+userId)\r\n      .subscribe( data => {\r\n        this.editForm.setValue(data);\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.userService.updateUser(this.editForm.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        data => {\r\n          this.router.navigate(['list-user']);\r\n        },\r\n        error => {\r\n          alert(error);\r\n        });\r\n  }\r\n\r\n  onChange(event){\r\n    this.file = event.target.files[0];\r\n  }\r\n\r\n  onUpload(){\r\n    this.loading=!this.loading;\r\n    console.log(this.file);\r\n    this.editUserService.upload(this.file).subscribe(\r\n      (event: any) => {\r\n        if (typeof(event) === 'object'){\r\n          this.imageLink = event.link;\r\n          this.loading = false;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  update() {\r\n    \r\n  }\r\n\r\n}\r\n","\r\n<div class=\"text-center\"> \r\n  <h2> Upload Your Profile Picture Below</h2> \r\n  <input class=\"form-control\" type=\"file\" \r\n          (change)=\"onChange($event)\"> \r\n\r\n  <button (click)=\"onUpload()\"  \r\n      class=\"btn btn-success\">\r\n      Upload \r\n  </button> \r\n</div>   \r\n\r\n<div class=\"container text-center jumbotron\"\r\n  *ngIf=\"imageLink\">   \r\n  <a href=\"{{imageLink}}\">{{imageLink}}</a> <!--We can make a link here that will send the user to view the uploaded picture-->\r\n</div> \r\n\r\n<div class=\"container\" *ngIf=\"loading\"> \r\n  <h3>Loading ...</h3> \r\n</div>  <!--I am changing this to a percentage that will give the user a visualization of their image loading-->\r\n\r\n<div class=\"col-md-6\">\r\n  <h2 class=\"text-center\">Edit User Information</h2>\r\n  <form (ngSubmit)=\"onSubmit()\">    \r\n    <div class=\"form-group\">\r\n      <label for=\"username\">Username: </label>\r\n      <input formControlName=\"username\" placeholder=\"Username\" name=\"username\" class=\"form-control\" id=\"username\"/><br>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"passwd\">Password: </label>\r\n      <input formControlName=\"passwd\" placeholder=\"Password\" name=\"passwd\" class=\"form-control\" id=\"passwd\"/><br>      \r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"firstName\">First Name: </label>\r\n      <input formControlName=\"firstName\" placeholder=\"First Name\" name=\"firstName\" class=\"form-control\" id=\"firstName\"/><br>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"lastName\">Last Name: </label>\r\n      <input formControlName=\"lastName\" placeholder=\"Last Name\" name=\"lastName\" class=\"form-control\" id=\"lastName\"/><br>\r\n    </div>\r\n\r\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"update()\">Update</button>\r\n  </form>\r\n</div>","<mdb-card class=\"mb-4\" style=\"background-color:#e0e0e0;\">\r\n    <mdb-card-body>\r\n        <mdb-card-title>\r\n            <div class=\"row\">\r\n                <div class=\"col-10\">\r\n                    <h4 class=\"font-weight-bold\">{{ post.title }}</h4>\r\n                    <p>Posted: {{ post.postTime }}</p>\r\n                </div>\r\n                <div class=\"col-2 my-auto mx-auto text-center\">\r\n                    <a (click)=\"addLike()\">\r\n                        <mdb-icon far icon=\"heart\" size=\"lg\" class=\"text-dark\" aria-hidden=\"true\"></mdb-icon>\r\n                    </a>\r\n                    <p style=\"color:black;\"><small>{{ post.likes }}</small></p>\r\n                </div>\r\n            </div>\r\n        </mdb-card-title>\r\n        <div class=\"card-deck\">\r\n            <app-post-song [track]=\"track\" *ngFor=\"let track of postTracks\"></app-post-song>\r\n        </div><br>\r\n        <div class=\"comment-box\">\r\n            <table class=\"comment-table\">\r\n                <tr>\r\n                    <th>Comments</th>\r\n                </tr>\r\n                <tr *ngFor=\"let comment of this.post.comments\">\r\n                    {{ comment.comment }}\r\n                    <a (click)=\"addLikeComment(comment)\">\r\n                        <mdb-icon far icon=\"heart\" size=\"1x\" class=\"red-text\" aria-hidden=\"true\"></mdb-icon>\r\n                    </a> \r\n                    {{comment.likes}} \r\n                    <button type=\"button\" (click)=\"editComment(comment)\" *ngIf=\"comment.user_id == userServ.loggedInUser.id\">Edit</button>\r\n                    <button type=\"button\" (click)=\"deleteComment(comment)\" *ngIf=\"comment.user_id == userServ.loggedInUser.id\">Delete</button>\r\n                </tr>\r\n            </table>\r\n            <form #newCommentForm><input name=\"new-comment\" class=\"comment-input\" type=\"text\" placeholder=\"Comment here...\" #newComment>\r\n            <button type=\"submit\" (click)=\"addComment(newComment.value); newCommentForm.reset()\">Post</button>\r\n        </form>\r\n        </div>\r\n    </mdb-card-body>\r\n</mdb-card>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Post } from '../models/post';\r\nimport { Track } from '../models/result-model';\r\nimport { Token } from '../models/token';\r\nimport { GetTrackService } from '../services/get-track.service';\r\nimport { CommentService } from '../services/comment-service.service';\r\nimport { LikesService } from '../services/likes.service';\r\nimport { PostComment } from '../models/post-comment';\r\nimport { UserService } from '../services/user.service'\r\nimport { NgForm } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-post-item',\r\n  templateUrl: './post-item.component.html',\r\n  styleUrls: ['./post-item.component.css']\r\n})\r\nexport class PostItemComponent implements OnInit {\r\n  @Input() post: Post;\r\n  token: Token;\r\n  postTracks: Track[] = new Array();\r\n  data:any;\r\n  \r\n\r\n  constructor(private getTrackServ: GetTrackService, private commentServ: CommentService, private likesServ: LikesService, private userServ: UserService) { }\r\n\r\n  addComment(newComment: string): void {\r\n    this.commentServ.add(this.post.id, newComment).subscribe(response => {this.post.comments.push(response)});\r\n  }\r\n\r\n  editComment(comment: PostComment): void {\r\n\r\n  }\r\n\r\n  deleteComment(comment: PostComment): void {\r\n    let index = this.post.comments.indexOf(comment);\r\n    console.log(index);\r\n    if (index != -1) {\r\n      this.commentServ.delete(comment).subscribe();\r\n      this.post.comments.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  addLike(): void {\r\n//     var found = false;\r\n// for(var i = 0; i < this.userServ.loggedInUser.likedPosts.length; i++) {\r\n//     if (this.userServ.loggedInUser.likedPosts[i].title == this.post.title) {\r\n//         found = true;\r\n//         break;\r\n//     }\r\n// }\r\n  if(!this.userServ.loggedInUser.likedPosts.some(p => p.id===this.post.id)){\r\n    this.post.likes++;    \r\n} else{\r\n    alert(\"you already liked this post\");      \r\n      \r\n}\r\n   \r\n    \r\n    this.likesServ.addLike(this.post.id).subscribe(response => {this.post=response});\r\n  }\r\n\r\n  addLikeComment(comment:any): void {\r\n    if(!this.userServ.loggedInUser.likedComments.some(c => c.id===comment.id)){\r\n      comment.likes++;\r\n    }else{\r\n      alert(\"you already liked this comment\");\r\n     }\r\n    this.likesServ.addLikeComment(comment.id).subscribe(response => {this.post.comments});\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    for (let i = 0; i < this.post.songs.length; i++) {\r\n      let track: Track;\r\n      this.getTrackServ.getTrack(this.post.songs[i].songKey).subscribe(\r\n        resp => {\r\n          track = resp;\r\n          this.postTracks.push(track);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport {UrlService} from './url.service';\r\nimport { PostComment } from '../models/post-comment';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class CommentService {\r\n\r\n    baseUrl: string;\r\n    \r\n    constructor(private http: HttpClient, private urlServ: UrlService, private userServ: UserService) {\r\n        this.baseUrl = this.urlServ.baseUrl;\r\n    }\r\n\r\n    add(postId: number, newCommentString: string): Observable<PostComment> {\r\n        let newComment = new PostComment();\r\n        newComment.comment = newCommentString;\r\n        newComment.user_id = this.userServ.loggedInUser.id;\r\n\r\n        return this.http.post(this.baseUrl + '/posts/comment/' + postId, newComment, {withCredentials: true}).pipe(map(response => response as PostComment));\r\n    }\r\n\r\n    delete(comment: PostComment): Observable<PostComment> {\r\n        return this.http.delete(this.baseUrl + '/posts/comment/' + comment.id, {withCredentials: true}).pipe(map(response => response as PostComment));\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-band-view',\r\n  templateUrl: './band-view.component.html',\r\n  styleUrls: ['./band-view.component.css']\r\n})\r\nexport class BandViewComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div style=\"margin-top:80px\">\r\n<app-band></app-band>\r\n<app-join-band></app-join-band>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { UrlService } from './url.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GetBandsService {\r\n  url: string;\r\n\r\n  constructor(private http:HttpClient, private urlServ: UrlService) {\r\n    this.url = this.urlServ.baseUrl + '/bands';\r\n   }\r\n\r\n  getBands(){\r\n    return this.http.get(this.url, {withCredentials: true});\r\n  }\r\n\r\n  \r\n}\r\n","export class PostComment {\r\n    id: number;\r\n    comment: string;\r\n    commentTime: Date;\r\n    likes: number;\r\n    user_id: number;\r\n\r\n    constructor() {\r\n        this.commentTime = new Date();\r\n        this.comment = \"\";\r\n        this.likes = 0;\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { DailyQuestion } from '../models/daily-question';\r\nimport { QuestionResponse } from '../models/question-response';\r\nimport { Track } from '../models/result-model';\r\nimport { Song } from '../models/song';\r\nimport { UrlService } from './url.service';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DailyQuestionService {\r\n  baseUrl: string;\r\n\r\n  constructor(private http: HttpClient, private urlServ: UrlService, private userServ: UserService) { \r\n    this.baseUrl = this.urlServ.baseUrl + '/dailyquestions';\r\n  }\r\n\r\n  public getDailyQuestion(): Observable<DailyQuestion> {\r\n    return this.http.get(this.baseUrl, {withCredentials: true}).pipe(\r\n      map(resp=>resp as DailyQuestion)\r\n    );\r\n  }\r\n\r\n  public createAnswer(track: Track): Observable<QuestionResponse> {\r\n    let response: QuestionResponse = new QuestionResponse;\r\n    response.id = 0;\r\n    let song: Song = new Song;\r\n    song.id = 0;\r\n    song.songKey = track.id;\r\n    response.song = song;\r\n    response.likes = 0;\r\n    response.questionDate = new Date();\r\n    return this.http.post(this.baseUrl, response, {withCredentials: true}).pipe(\r\n      map(resp => \r\n        resp as QuestionResponse\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {UrlService} from './url.service';\r\nimport { Post } from '../models/post';\r\nimport { PostComment } from '../models/post-comment';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { QuestionResponse } from '../models/question-response';\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LikesService {\r\n  baseUrl: string;\r\n    \r\n    constructor(private http: HttpClient, private urlServ: UrlService) {\r\n        this.baseUrl = this.urlServ.baseUrl;\r\n    }\r\n\r\n    addLike(postId: number): Observable<Post> {\r\n        return this.http.put(this.baseUrl + '/posts/likes/' + postId, {}, {withCredentials: true}).pipe(map(response => response as Post));\r\n    }\r\n\r\n    addLikeComment(postCommentId: number): Observable<PostComment> {\r\n      return this.http.put(this.baseUrl + '/posts/comments/' + postCommentId, {}, {withCredentials: true}).pipe(map(response => response as PostComment));\r\n  }\r\n    addLikeQR(respId:number): Observable<QuestionResponse> {\r\n      return this.http.put(this.baseUrl + '/dailyquestions/responses/likes/' + respId, {}, {withCredentials: true}).pipe(map(response => response as QuestionResponse));\r\n\r\n    }\r\n}\r\n","<div class=\"row\" style=\"background-color:#4a148c;\">\r\n    <div class=\"col-3\" style=\"width:auto;\">\r\n        <br><br><br><br><br>\r\n        <app-daily-question></app-daily-question>\r\n    </div>\r\n    <div class=\"col-9\">\r\n        <br><br><br><br><br>\r\n        <div style=\"margin-left:8%; width:90%;\">\r\n            <h2 style=\"color:white;\"><strong>My Bands</strong></h2>\r\n        </div><br>\r\n        <app-band-snapshot [band]=\"band\" *ngFor=\"let band of this.userServ.loggedInUser.bands\"></app-band-snapshot>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(public userServ: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Spinner';\r\n}\r\n","<app-home></app-home>\r\n","import {Deserializable} from \"./deserializable.model\";\r\nimport { Band } from \"../models/band\";\r\nimport { Post } from \"../models/post\";\r\nimport { PostComment } from \"../models/post-comment\";\r\nimport { QuestionResponse } from \"../models/question-response\";\r\n\r\nexport class User implements Deserializable {\r\n    id: number;\r\n    username: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    bands: Band[];\r\n    likedPosts:Post[];\r\n    likedComments: PostComment[];\r\n    likedQotdResponses: QuestionResponse[];\r\n\r\n    constructor(username: string, password: string, firstName: string, lastName: string) {\r\n        this.id = null;\r\n        this.username = username;\r\n        this.password = password;\r\n        this.firstName = firstName;\r\n        this.lastName = lastName;\r\n    }\r\n\r\n    deserialize(input: any): this{\r\n        Object.assign(this, input);\r\n        return this;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-comment-box',\r\n  templateUrl: './comment-box.component.html',\r\n  styleUrls: ['./comment-box.component.css']\r\n})\r\nexport class CommentBoxComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>comment-box works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SearchItemComponent } from './search-item/search-item.component';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { BandPostComponent } from './band-post/band-post.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BandComponent } from './band/band.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { JoinBandComponent } from './join-band/join-band.component';\r\nimport { PostItemComponent } from './post-item/post-item.component';\r\nimport { BandSnapshotComponent } from './band-snapshot/band-snapshot.component';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { DailyQuestionComponent } from './daily-question/daily-question.component';\r\nimport { CommentBoxComponent } from './comment-box/comment-box.component';\r\nimport { ResponseItemComponent } from './response-item/response-item.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { BandViewComponent } from './band-view/band-view.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { LikedpostsComponent } from './likedposts/likedposts.component';\nimport { PostSongComponent } from './post-song/post-song.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    SearchItemComponent,\r\n    SearchComponent,\r\n    RegisterComponent,\r\n    BandPostComponent,\r\n    BandComponent,\r\n    JoinBandComponent,\r\n    PostItemComponent,\r\n    BandSnapshotComponent,\r\n    DailyQuestionComponent,\r\n    CommentBoxComponent,\r\n    ResponseItemComponent,\r\n    DashboardComponent,\r\n    BandViewComponent,\r\n    NavbarComponent,\r\n    LikedpostsComponent,\r\n    PostSongComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    MDBBootstrapModule.forRoot(),\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EditUserService {\r\n\r\n  baseUrl= \"ourURL\"\r\n  constructor(private http:HttpClient) { }\r\n\r\n  upload(file):Observable<any>{\r\n    const formData=new FormData(); //creating our form data\r\n    formData.append(\"file\", file, file.name); //stores whatever file user uploads\r\n    return this.http.post(this.baseUrl, formData, {withCredentials: true}) //this will http post our formData request\r\n  }\r\n}\r\n","<app-post-item [post]=\"post\" *ngFor=\"let post of this.userServ.loggedInUser.likedPosts\"></app-post-item>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../services/user.service'\r\n\r\n@Component({\r\n  selector: 'app-likedposts',\r\n  templateUrl: './likedposts.component.html',\r\n  styleUrls: ['./likedposts.component.css']\r\n})\r\nexport class LikedpostsComponent implements OnInit {\r\n\r\n  constructor(public userServ: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { UrlService } from '../services/url.service';\r\n\r\n@Component({\r\n  selector: 'app-band',\r\n  templateUrl: './band.component.html',\r\n  styleUrls: ['./band.component.css']\r\n})\r\nexport class BandComponent implements OnInit {\r\n  baseUrl: string = this.urlServ.baseUrl + 'Spinner';\r\n  name:String\r\n\r\n  constructor(private http: HttpClient, private urlServ: UrlService ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  createBand(){\r\n    let url= this.baseUrl+\"/bands\"\r\n    this.http.post(url,{\r\n      name:this.name\r\n    }, {withCredentials: true}).subscribe((result)=>{\r\n      console.log(result);\r\n    })\r\n  }\r\n\r\n}\r\n","<mdb-card style=\"width:80%; margin:0 auto\">\r\n    <div class=\"card-body\">\r\n       <button type=\"button\" class=\"btn btn-dark\" mdbBtn color=\"default\" rounded=\"true\" data-toggle=\"modal\" data-target=\"#basicExample\" (click)=\"frame.show()\"\r\n        mdbWavesEffect>Create a new Band</button>\r\n\r\n       <div mdbModal #frame=\"mdbModal\" class=\"modal fade top\" id=\"frameModalTop\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n         <div class=\"modal-dialog modal-notify modal-success\" role=\"document\">\r\n           <!--Content-->\r\n           <div class=\"modal-content\">\r\n           <!--Header-->\r\n           <div class=\"modal-header\">\r\n                <p class=\"heading lead\">Create a new band</p>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"frame.hide()\">\r\n                <span aria-hidden=\"true\" class=\"white-text\">&times;</span>\r\n                </button>\r\n            </div>\r\n\r\n            <!--Body-->\r\n\r\n            <!--Basic textarea-->\r\n            <div class=\"md-form\">\r\n                <textarea type=\"text\" [(ngModel)]=\"name\" placeholder=\"how would you like to name the new band?\" id=\"form79textarea\" class=\"md-textarea form-control\" rows=\"2\" mdbInput></textarea>\r\n            </div>\r\n            <!--Footer-->\r\n            <div class=\"modal-footer justify-content-center\">\r\n                <a type=\"button\" (click)=\"createBand()\" mdbBtn color=\"success\" class=\"waves-effect\" mdbWavesEffect (click)=\"frame.hide()\">Create band\r\n                <mdb-icon far icon=\"gem\" class=\"ml-1\"></mdb-icon>\r\n                </a>\r\n\r\n                <a type=\"button\" mdbBtn color=\"success\" outline=\"true\" class=\"waves-effect\" mdbWavesEffect (click)=\"frame.hide()\">No, thanks</a>\r\n            </div>\r\n            </div>\r\n    <!--/.Content-->\r\n            </div>\r\n        </div>\r\n</div>\r\n</mdb-card>","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UrlService {\r\n    readonly baseUrl: string;\r\n\r\n    constructor(){\r\n        //this.baseUrl = 'http://localhost:8080/Spinner';\r\n        this.baseUrl = 'http://ec2-3-139-86-183.us-east-2.compute.amazonaws.com:8081/Spinner';\r\n    }\r\n}\r\n","<mdb-navbar SideClass=\"navbar navbar-expand-lg grey lighten-2 fixed-top\" [containerInside]=\"false\">\r\n    <mdb-navbar-brand>\r\n        <a class=\"navbar-brand font-weight-bold\" routerLink=\"dashboard\" style=\"color:#4a148c;\">\r\n            <img src=\"assets/spinner_logo.png\" height=\"50\" class=\"d-inline-block align-middle\">\r\n            Spinner\r\n        </a>\r\n    </mdb-navbar-brand>\r\n    <links>\r\n        <form class=\"form-inline waves-light\" mdbWavesEffect>\r\n            <div class=\"md-form my-0\">\r\n              <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search For Posts By Song\"\r\n                (keyup)=\"search(searchTerm.value)\" (keydown.backspace)=\"search(searchTerm.value)\" #searchTerm>\r\n            </div>\r\n        </form>\r\n        <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" (click)=\"searchPosts=[];\" style=\"color:#4a148c;\">Close</a>\r\n            </li>\r\n        </ul>\r\n\r\n        <ul class=\"navbar-nav ml-auto nav-flex-icons\">\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" routerLink=\"likedposts\" style=\"color:#4a148c;\">My liked posts</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" routerLink=\"bands\" style=\"color:#4a148c;\" routerLinkActive=\"active\">Join Bands</a>\r\n            </li>\r\n            <li class=\"nav-item avatar dropdown\" dropdown>\r\n              <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light font-weight-bold\" style=\"color:#4a148c;\" mdbWavesEffect>\r\n                Welcome, {{this.userServ.loggedInUser.firstName}}</a>\r\n              <div *dropdownMenu class=\"dropdown-menu dropdown-menu-right dropdown dropdown-primary\" role=\"menu\">\r\n                <a class=\"dropdown-item waves-light\" mdbWavesEffect routerLink=\"user\">My account</a>\r\n                <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\" (click)=\"this.userServ.logout()\">Log out</a>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n    </links>\r\n</mdb-navbar>\r\n<div *ngIf=\"tracks.length > 0\" class=\"card-deck\" style=\"position:absolute; top:4rem; left:10rem; right:37rem; background-color:rgba(224,224,224,0.75); z-index:100\">\r\n    <br><br><br><app-search-item [track]=\"track\" *ngFor=\"let track of tracks\" (click)=\"searchTrack=track; getPostsBySong(track)\"></app-search-item><br><br>\r\n</div>\r\n<div *ngIf=\"searchPosts.length > 0\" class=\"card-deck\" style=\"position:absolute; top:4rem; left:10rem; right:37rem; background-color:rgba(224,224,224,0.75); z-index:100\">\r\n    <br><br><br><app-post-item [post]=\"post\" *ngFor=\"let post of searchPosts\"></app-post-item><br><br>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SearchService } from '../services/search.service';\r\nimport { UserService } from '../services/user.service';\r\nimport { Track } from '../models/result-model';\r\nimport { PostService } from '../services/post.service';\r\nimport { Post } from '../models/post';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  tracks: Track[] = [];\r\n  searchTrack: Track;\r\n  searchPosts: Post[] = [];\r\n\r\n  constructor(public userServ: UserService, public searchServ: SearchService, public postServ: PostService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  search(term: string) {\r\n    if (!term || term == \"\") {\r\n      this.tracks = [];\r\n      return;\r\n    }\r\n    this.searchServ.getSearchResult(term).subscribe((data: any) => {\r\n      this.tracks = data.tracks.items;\r\n    }, (err) => {\r\n      console.error(err.message);\r\n    });\r\n  }\r\n\r\n  getPostsBySong(track: Track) {\r\n    this.tracks=[];\r\n    this.postServ.getPostsBySong(track).subscribe(\r\n      resp => {\r\n        this.searchPosts = resp;\r\n      }\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { SpotifyService } from 'src/app/services/spotify.service';\r\nimport { Track } from '../models/result-model';\r\nimport { Token } from '../models/token';\r\nimport { GetTrackService } from './get-track.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchService {\r\n\r\n  constructor(private spotifyServ: SpotifyService) { }\r\n\r\n  public getSearchResult(term: string): Observable<Track[]> {\r\n    const searchUrl: string = `search?q=${term}&type=track&limit=10`;\r\n    let token: Token = this.spotifyServ.getToken();\r\n\r\n    return this.spotifyServ.getQuery(searchUrl, token).pipe(\r\n      map(resp => resp as Track[])\r\n    );\r\n  }\r\n}\r\n","export class Song {\r\n    id: number;\r\n    songKey: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Token } from '../models/token';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpotifyService {\r\n  token: Token;\r\n\r\n  constructor(private http: HttpClient) {\r\n    \r\n  }\r\n\r\n  public getKey(): Observable<Token> {\r\n    const url: string = 'https://accounts.spotify.com/api/token';\r\n\r\n    const body = 'grant_type=client_credentials';\r\n    let encoded = 'ZTNmM2U2NjE0NThkNDg1Njk4MmQwZTZlNWYwNjYwYjU6ZDFkMjdkMmRkNmM0NGE5Mjg2N2ZhMDMxY2U2M2Y5MDU=';\r\n\r\n    const headers = new HttpHeaders({\r\n      Authorization: `Basic ${encoded}`,\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    });\r\n\r\n    return this.http.post(url, body, { headers }).pipe(map(resp => resp as Token));\r\n  }\r\n\r\n  public getToken() {\r\n    return this.token;\r\n  }\r\n\r\n  public getQuery(query: string, token: Token) {\r\n    \r\n    const url: string = `https://api.spotify.com/v1/${query}`;\r\n\r\n    const headers = new HttpHeaders({\r\n      'Authorization': 'Bearer ' + token.access_token\r\n    });\r\n\r\n    return this.http.get(url, { headers });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { User } from '../models/user.model';\r\nimport {UrlService} from './url.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n    loggedInUser: User;\r\n    baseUrl: string;\r\n    \r\n    constructor(private http: HttpClient, private urlServ: UrlService) { \r\n        this.baseUrl = this.urlServ.baseUrl + '/user';\r\n    }\r\n\r\n    login(): Observable<User> {\r\n        let username = (<HTMLInputElement>document.getElementById('username-login')).value;\r\n        let password = (<HTMLInputElement>document.getElementById('password-login')).value;\r\n\r\n        (<HTMLInputElement>document.getElementById('username-login')).value = '';\r\n        (<HTMLInputElement>document.getElementById('password-login')).value = '';\r\n\r\n        let loggingUser = new User(username, password, null, null);\r\n\r\n        return this.http.post(this.urlServ.baseUrl + '/user/login', loggingUser, {withCredentials: true}).pipe(map(response => response as User));\r\n    }\r\n\r\n    register(): Observable<User> {\r\n        let username = (<HTMLInputElement>document.getElementById('username-reg')).value;\r\n        let password = (<HTMLInputElement>document.getElementById('password-reg')).value;\r\n        let firstName = (<HTMLInputElement>document.getElementById('firstName')).value;\r\n        let lastName = (<HTMLInputElement>document.getElementById('lastName')).value;\r\n\r\n        (<HTMLInputElement>document.getElementById('username-reg')).value = '';\r\n        (<HTMLInputElement>document.getElementById('password-reg')).value = '';\r\n        (<HTMLInputElement>document.getElementById('firstName')).value = '';\r\n        (<HTMLInputElement>document.getElementById('lastName')).value = '';\r\n    \r\n        let newUser = new User(username, password, firstName, lastName);\r\n\r\n        return this.http.post(this.urlServ.baseUrl + '/user/register', newUser, {withCredentials: true}).pipe(map(response => response as User));\r\n\r\n    }\r\n\r\n    getLoggedInUser(): void {\r\n        this.http.get(this.baseUrl, {withCredentials: true}).pipe(map(response => response as User)).subscribe(response => {this.loggedInUser = response});\r\n    }\r\n\r\n    logout() {\r\n        this.http.delete(this.baseUrl + '/login', {withCredentials: true});\r\n        this.loggedInUser = null;\r\n    }\r\n\r\n    getUser() {\r\n        return this.loggedInUser;\r\n    }\r\n    \r\n    getUserById(id: number) {\r\n    return this.http.get<User>(this.baseUrl + '/' + id, {withCredentials: true});\r\n    }\r\n\r\n    updateUser(user: User) {\r\n    return this.http.put(this.baseUrl + '/' + user.id, user, {withCredentials: true});\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { SpotifyService } from './spotify.service';\r\nimport { Track } from '../models/result-model';\r\nimport { Token } from '../models/token';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GetTrackService {\r\n\r\n  constructor(private spotifyServ: SpotifyService) { }\r\n\r\n  public getTrack(trackId: string): Observable<Track> {\r\n    const getUrl: string = `tracks/${trackId}`;\r\n    let token: Token = this.spotifyServ.getToken();\r\n\r\n    return this.spotifyServ.getQuery(getUrl, token).pipe(\r\n      map(resp => resp as Track)\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Track } from '../models/result-model';\r\nimport { SearchService } from '../services/search.service';\r\nimport { PostService } from '../services/post.service';\r\nimport { Band } from '../models/band';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-band-post',\r\n  templateUrl: './band-post.component.html',\r\n  styleUrls: ['./band-post.component.css']\r\n})\r\nexport class BandPostComponent implements OnInit {\r\n  searchTracks: Track[];\r\n  postTracks: Track[] = [];\r\n  postTitle: string;\r\n  @Input() band: Band;\r\n  @Output() closePost = new EventEmitter();\r\n\r\n  constructor(private searchServ: SearchService, private postServ: PostService, private modalServ: NgbModal) { }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public search(term: string): void {\r\n    this.searchServ.getSearchResult(term).subscribe((data: any) => {\r\n      this.searchTracks = data.tracks.items;\r\n    }, (err) => {\r\n      console.error(err.message);\r\n    });\r\n  }\r\n\r\n  public addToPost(track: Track) {\r\n    let isInPost: boolean = false;\r\n    for (let i = 0; i < this.postTracks.length; i++) {\r\n      if (this.postTracks[i].id == track.id) {\r\n        isInPost = true;\r\n      }\r\n    }\r\n    if (!isInPost) {\r\n      this.postTracks.push(track);\r\n    }\r\n  }\r\n\r\n  public removeFromPost(track: Track) {\r\n    for (let i = 0; i < this.postTracks.length; i++) {\r\n      if (this.postTracks[i].id == track.id) {\r\n        this.postTracks.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public createPost() {\r\n    this.postServ.createPost(this.postTracks, this.postTitle, this.band);\r\n    this.modalServ.dismissAll();\r\n    this.closePost.emit();\r\n  }\r\n\r\n  openModal(content) {\r\n    this.modalServ.open(content, { centered: true, size: 'lg' });\r\n  }\r\n\r\n}\r\n","<button  type=\"button\" style=\"border-radius:20px; color:#4a148c;\" class=\"btn font-weight-bold\" (click)=\"openModal(newPostContent)\">\r\n    New Post\r\n</button>\r\n\r\n<ng-template #newPostContent let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title font-weight-bold\" style=\"color:#4a148c;\">Create a new post in {{ band.name }}</h4>\r\n        <button type=\"button\" class=\"close\" (click)=\"modal.close()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <form #postForm=\"ngForm\">\r\n            <h5 class=\"font-weight-bold\">Title:</h5>\r\n            <input type=\"text\" id=\"postTitle\" name=\"postTitle\" [(ngModel)]=\"postTitle\" placeholder=\"Please enter a title for your post\"><br><br>\r\n            <h5 class=\"font-weight-bold\">Songs:</h5>\r\n            <div class=\"card-deck\">\r\n                <app-search-item [track]=\"track\" *ngFor=\"let track of postTracks\" (click)=\"removeFromPost(track)\"></app-search-item>\r\n            </div>\r\n        </form>\r\n        <br>\r\n        <app-search (newTrack)=\"addToPost($event)\"></app-search>\r\n        <div *ngIf=\"searchTracks\" class=\"card-deck\">\r\n            <app-search-item [track]=\"track\" *ngFor=\"let track of searchTracks\" (click)=\"addToPost(track)\"></app-search-item>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" (click)=\"createPost(); postForm.reset()\">Post</button>\r\n    </div>\r\n</ng-template>\r\n","<mdb-card style=\"width:85%; margin:0 auto\" class=\"mb-4\">\r\n    <mdb-navbar SideClass=\"navbar navbar-expand-lg grey lighten-2\" [containerInside]=\"false\">\r\n        <mdb-navbar-brand>\r\n            <a class=\"navbar-brand\" style=\"color:#4a148c;\">\r\n                <h3 class=\"font-weight-bold\">{{ band.name }}</h3>\r\n            </a>\r\n        </mdb-navbar-brand>\r\n        <links>\r\n            <ul class=\"navbar-nav mr-auto\">\r\n                <li class=\"nav-item dropdown\" dropdown>\r\n                    <a dropdownToggle mdbWavesEffect type=\"button\" style=\"color:#4a148c;\" class=\"nav-link dropdown-toggle waves-light\">\r\n                        Sort Posts By:\r\n                    </a>\r\n                    <div class=\"dropdown-menu dropdown-primary\">\r\n                        <a class=\"dropdown-item\" (click)=\"sortByLikes()\">Likes</a>\r\n                        <a class=\"dropdown-item\" (click)=\"sortByDate()\">Post Time</a>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n            <ul class=\"navbar-nav ml-auto\">\r\n                <li class=\"nav-item\">\r\n                    <app-band-post [band]=\"band\" (closePost)=\"newPost()\"></app-band-post>\r\n                </li>\r\n            </ul>\r\n        </links>\r\n    </mdb-navbar>\r\n    <div class=\"card-body\">\r\n        <app-post-item [post]=\"post\" *ngFor=\"let post of posts\"></app-post-item>\r\n    </div>\r\n</mdb-card>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Band } from '../models/band';\r\nimport { Post } from '../models/post';\r\nimport { PostService } from '../services/post.service';\r\n\r\n@Component({\r\n  selector: 'app-band-snapshot',\r\n  templateUrl: './band-snapshot.component.html',\r\n  styleUrls: ['./band-snapshot.component.css']\r\n})\r\nexport class BandSnapshotComponent implements OnInit {\r\n  @Input() band: Band;\r\n  posts: Post[];\r\n  isPost: boolean;\r\n\r\n  constructor(public postServ: PostService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isPost = false;\r\n    this.postServ.getBandPosts(this.band.id).subscribe(resp => {\r\n      this.posts = resp;\r\n      this.sortByLikes();\r\n      for (let post of this.posts) {\r\n        post.postTime = new Date(post.postTime);\r\n      }\r\n    });\r\n  }\r\n\r\n  public newPost() {\r\n    this.postServ.getBandPosts(this.band.id).subscribe(resp => {\r\n      this.posts = resp;\r\n    });\r\n  }\r\n\r\n  public sortByLikes() {\r\n    this.posts.sort((a,b) => a.likes > b.likes ? -1 : a.likes < b.likes ? 1 : 0);\r\n  }\r\n\r\n  public sortByDate() {\r\n    this.posts.sort((a,b) => a.postTime.getTime() > b.postTime.getTime() ? -1 : a.postTime.getTime() < b.postTime.getTime() ? 1 : 0);\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { Token } from '../models/token';\r\nimport { Track } from '../models/result-model';\r\nimport { SpotifyService } from '../services/spotify.service';\r\nimport { SearchService } from '../services/search.service';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  tracks: Track[] = [];\r\n  @Output() newTrack = new EventEmitter<Track>();\r\n\r\n  constructor(private spotifyServ: SpotifyService, private searchServ: SearchService) { }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public search(term: string): void {\r\n    if (term.length > 0) {\r\n      this.searchServ.getSearchResult(term).subscribe((data: any) => {\r\n        this.tracks = data.tracks.items;\r\n      }, (err) => {\r\n        console.error(err.message);\r\n      });\r\n    } else {\r\n      this.tracks = [];\r\n    }\r\n  }\r\n\r\n  public outputTrack(track: Track) {\r\n    this.newTrack.emit(track);\r\n  }\r\n\r\n}\r\n","<div>\r\n    <input type=\"text\" id=\"inputSearch\" placeholder=\"Search for a song\"\r\n        (keyup)=\"search(searchTerm.value)\" (keydown.backspace)=\"search(searchTerm.value)\" #searchTerm>\r\n</div>\r\n<div *ngIf=\"tracks\" class=\"card-deck\">\r\n    <app-search-item [track]=\"track\" *ngFor=\"let track of tracks\" (click)=\"outputTrack(track)\"></app-search-item>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BandViewComponent } from './band-view/band-view.component'\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { EditUserComponent } from './edit-user/edit-user.component';\r\nimport { LikedpostsComponent } from './likedposts/likedposts.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:DashboardComponent\r\n  },\r\n  {\r\n    path:'dashboard',\r\n    component:DashboardComponent\r\n  },\r\n  {\r\n    path:'bands',\r\n    component:BandViewComponent\r\n  },\r\n\r\n  {\r\n    path:'likedposts',\r\n    component:LikedpostsComponent\r\n  },\r\n  {\r\n    path:'user',\r\n    component:EditUserComponent\r\n  }\r\n]\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","<mdb-card class=\"mb-4\" *ngIf=\"track\">\n    <mdb-card-body class=\"searchItemDivChild\">\n        <img class=\"searchResultImg\" [src]=\"track.album.images[0].url\" [alt]=\"track.name\"><br><br>\n        <p class=\"font-weight-bold\" style=\"color:white;\">{{ track.name }}</p>\n        <p style=\"color:#DCDCDC;\">{{ track.artists[0].name }}</p>\n    </mdb-card-body>\n</mdb-card>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Track } from '../models/result-model';\n\n@Component({\n  selector: 'app-post-song',\n  templateUrl: './post-song.component.html',\n  styleUrls: ['./post-song.component.css']\n})\nexport class PostSongComponent implements OnInit {\n  @Input() track: Track\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mdb-card *ngIf=\"track\" class=\"mb-2\">\r\n    <mdb-card-body>\r\n        <div class=\"row\" style=\"background-color:rgba(25,20,20,1);\">\r\n            <div class=\"col-4\">\r\n                <br><img class=\"searchResultImg\" [src]=\"track.album.images[0].url\" [alt]=\"track.name\"><br><br>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <br><p class=\"font-weight-bold\" style=\"color:white;\">{{ track.name }}</p>\r\n                <p style=\"color:#DCDCDC;\">{{ track.artists[0].name }}</p>\r\n            </div>\r\n            <div class=\"col-2 my-auto mx-auto text-center\">\r\n                <mdb-icon far icon=\"heart\" size=\"2x\" class=\"white-text\" aria-hidden=\"true\" (click)=\"addLikeQuestionResp(response)\"></mdb-icon><br>\r\n                <p style=\"color:white;\">{{ response.likes }}</p>\r\n            </div>\r\n        </div>\r\n    </mdb-card-body>\r\n</mdb-card>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { QuestionResponse } from '../models/question-response';\r\nimport { Track } from '../models/result-model';\r\nimport { GetTrackService } from '../services/get-track.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { LikesService } from '../services/likes.service';\r\nimport { UserService } from '../services/user.service'\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-response-item',\r\n  templateUrl: './response-item.component.html',\r\n  styleUrls: ['./response-item.component.css']\r\n})\r\nexport class ResponseItemComponent implements OnInit {\r\n  @Input() response: QuestionResponse;\r\n  track: Track;\r\n\r\n  constructor(private getTrackServ: GetTrackService, private likesServ: LikesService, private userServ: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getTrackServ.getTrack(this.response.song.songKey).subscribe(\r\n      resp => {\r\n        this.track = resp;\r\n      }\r\n    );\r\n  }\r\n  \r\n  addLikeQuestionResp(response:any): void{\r\n    if(!this.userServ.loggedInUser.likedQotdResponses.some(qr => qr.id===response.id)){\r\n      response.likes++;\r\n    }else{\r\n      alert(\"you already liked this comment\");\r\n     }\r\n    this.likesServ.addLikeQR(this.response.id).subscribe(response => {this.response=response});\r\n  }\r\n\r\n}\r\n","<div class=\"position-fixed\" style=\"width:30%;\" *ngIf=\"questionOtd\">\r\n<mdb-card style=\"width:80%; margin:0 auto; margin-left:4rem; background-color:#e0e0e0;\"><!-- rgba(238,238,238,1)-->\r\n    <mdb-card-body>\r\n        <h2 class=\"card-title\" style=\"color:#4a148c;\"><strong>Question Of The Day</strong></h2><hr>\r\n        <h4><strong>{{ questionOtd.question }}</strong></h4><hr>\r\n        <div>\r\n            <app-response-item [response]=\"response\" \r\n                *ngFor=\"let response of questionOtd.responses | slice: (page-1) * pageSize : page * pageSize\"></app-response-item>\r\n        </div>\r\n        <div class=\"d-flex justify-content-center\">\r\n            <ngb-pagination [(page)]=\"page\" [pageSize]=\"pageSize\" [collectionSize]=\"questionOtd.responses.length\"></ngb-pagination>\r\n        </div>\r\n        <div class=\"d-flex justify-content-center\">\r\n            <button type=\"button\" class=\"btn btn-dark\" style=\"background-color:#4a148c;\" (click)=\"openModal(newResponse)\">\r\n                Add a Response\r\n            </button>\r\n        </div>\r\n    </mdb-card-body>    \r\n</mdb-card>\r\n</div>\r\n\r\n<ng-template #newResponse let-modal>\r\n    <div class=\"modal-header\">\r\n        <h4 class=\"modal-title font-weight-bold\" style=\"color:#4a148c;\">Respond to the Question of the Day</h4>\r\n        <button type=\"button\" class=\"close\" (click)=\"modal.close()\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <form>\r\n            <h5 class=\"font-weight-bold\">Song:</h5>\r\n            <div class=\"card-deck\">\r\n                <app-search-item [track]=\"responseTrack\"></app-search-item>\r\n            </div>\r\n        </form>\r\n        <br>\r\n        <div>\r\n            <input type=\"text\" id=\"inputSearch\" placeholder=\"Search for a song\"\r\n                (keyup)=\"search(searchTerm.value)\" (keydown.backspace)=\"search(searchTerm.value)\" #searchTerm>\r\n        </div>\r\n        <div *ngIf=\"searchTracks\" class=\"card-deck\">\r\n            <app-search-item [track]=\"track\" *ngFor=\"let track of searchTracks\" (click)=\"addToResponse(track)\"></app-search-item>\r\n        </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" (click)=\"createAnswer()\">Post</button>\r\n    </div>\r\n</ng-template>\r\n","import { Component, ElementRef, OnInit } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { DailyQuestion } from '../models/daily-question';\r\nimport { DailyQuestionService } from '../services/daily-question.service';\r\nimport { Track } from '../models/result-model';\r\nimport { SearchService } from '../services/search.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n@Component({\r\n  selector: 'app-daily-question',\r\n  templateUrl: './daily-question.component.html',\r\n  styleUrls: ['./daily-question.component.css']\r\n})\r\nexport class DailyQuestionComponent implements OnInit {\r\n  questionOtd: DailyQuestion;\r\n  responseTrack: Track;\r\n  searchTracks: Track[];\r\n  data: any;\r\n  page: number = 1;\r\n  pageSize: number = 3;\r\n\r\n  constructor(private http: HttpClient, private dqServ: DailyQuestionService, private searchServ: SearchService, private modalServ: NgbModal) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dqServ.getDailyQuestion().subscribe(\r\n      resp => {\r\n        this.questionOtd = resp;\r\n        this.questionOtd.responses.sort((a,b) => a.likes > b.likes ? -1 : a.likes < b.likes ? 1 : 0);\r\n      }\r\n    );\r\n  }\r\n\r\n  search(term: string) {\r\n    this.searchServ.getSearchResult(term).subscribe((data: any) => {\r\n      this.searchTracks = data.tracks.items;\r\n    }, (err) => {\r\n      console.error(err.message);\r\n    });\r\n  }\r\n\r\n  addToResponse(track: Track) {\r\n    this.responseTrack = track;\r\n    this.searchTracks = [];\r\n  }\r\n\r\n  createAnswer(){\r\n    this.dqServ.createAnswer(this.responseTrack).subscribe(\r\n      resp => {\r\n        this.questionOtd.responses.push(resp)\r\n      }\r\n    );\r\n    this.modalServ.dismissAll();\r\n  }\r\n  \r\n  openModal(content) {\r\n    this.modalServ.open(content, { centered: true, size: 'lg' });\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}